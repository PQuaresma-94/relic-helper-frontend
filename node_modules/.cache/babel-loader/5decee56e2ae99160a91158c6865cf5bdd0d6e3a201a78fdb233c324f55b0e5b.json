{"ast":null,"code":"var _jsxFileName = \"/Users/pedroquaresma/Developer/relic-helper-frontend/src/components/RelicTable/RelicTable.js\",\n  _s = $RefreshSig$();\nimport \"./RelicTable.css\";\nimport { useMemo } from \"react\";\nimport { RELICDATA, RELICMATERIALIMAGES } from \"../../utils/constants\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RelicTable = () => {\n  _s();\n  const data = useMemo(() => RELICDATA, []);\n  const columns = useMemo(() => {\n    const materialColumns = Object.keys(RELICMATERIALIMAGES).map(key => ({\n      Header: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: RELICMATERIALIMAGES[key],\n        alt: key,\n        className: \"table__image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this),\n      accessor: key\n    }));\n    return [{\n      Header: \"Relic Level\",\n      accessor: \"relic\"\n    }, ...materialColumns];\n  }, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table__title\",\n      children: \"Relic Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table__container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table__section\",\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table__header\",\n              ...column.getHeaderProps(),\n              children: column.render(\"Header\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"table__row\",\n              ...row.getRowProps(),\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: [\" \", cell.render(\"Cell\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(RelicTable, \"2M+cEGJjZRLIqxt38XQe/AMxJJk=\", false, function () {\n  return [useTable];\n});\n_c = RelicTable;\nexport default RelicTable;\nvar _c;\n$RefreshReg$(_c, \"RelicTable\");","map":{"version":3,"names":["useMemo","RELICDATA","RELICMATERIALIMAGES","useTable","jsxDEV","_jsxDEV","RelicTable","_s","data","columns","materialColumns","Object","keys","map","key","Header","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/pedroquaresma/Developer/relic-helper-frontend/src/components/RelicTable/RelicTable.js"],"sourcesContent":["import \"./RelicTable.css\";\nimport { useMemo } from \"react\";\nimport { RELICDATA, RELICMATERIALIMAGES } from \"../../utils/constants\";\nimport { useTable } from \"react-table\";\n\nconst RelicTable = () => {\n  const data = useMemo(() => RELICDATA, []);\n  const columns = useMemo(() => {\n    const materialColumns = Object.keys(RELICMATERIALIMAGES).map((key) => ({\n      Header: (\n        <img\n          src={RELICMATERIALIMAGES[key]}\n          alt={key}\n          className=\"table__image\"\n        />\n      ),\n      accessor: key,\n    }));\n\n    return [\n      {\n        Header: \"Relic Level\",\n        accessor: \"relic\",\n      },\n      ...materialColumns,\n    ];\n  }, []);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <div className=\"table\">\n      <div className=\"table__title\">Relic Table</div>\n      <div className=\"table__container\">\n        <table className=\"table__section\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th className=\"table__header\" {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr className=\"table__row\" {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td {...cell.getCellProps()}> {cell.render(\"Cell\")}</td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default RelicTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}